[{"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js":"1","/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx":"2","/Users/nicoleremy/code/onramp_final/client/src/App.tsx":"3","/Users/nicoleremy/code/onramp_final/client/src/index.tsx":"4","/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx":"5","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx":"6","/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx":"7","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx":"8","/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx":"9","/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx":"10","/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx":"11","/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx":"12","/Users/nicoleremy/code/onramp_final/client/src/components/LoginForm/LoginForm.tsx":"13","/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx":"14","/Users/nicoleremy/code/newsfeed/client/src/index.tsx":"15","/Users/nicoleremy/code/newsfeed/client/src/reportWebVitals.js":"16","/Users/nicoleremy/code/newsfeed/client/src/App.tsx":"17","/Users/nicoleremy/code/newsfeed/client/src/utils/API.tsx":"18","/Users/nicoleremy/code/newsfeed/client/src/pages/Home/Home.tsx":"19","/Users/nicoleremy/code/newsfeed/client/src/components/Footer/Footer.tsx":"20","/Users/nicoleremy/code/newsfeed/client/src/pages/User/User.tsx":"21","/Users/nicoleremy/code/newsfeed/client/src/components/Appbar/Appbar.tsx":"22","/Users/nicoleremy/code/newsfeed/client/src/pages/Login/Login.tsx":"23","/Users/nicoleremy/code/newsfeed/client/src/components/News/News.tsx":"24","/Users/nicoleremy/code/newsfeed/client/src/components/Sup/Sup.tsx":"25","/Users/nicoleremy/code/newsfeed/client/src/components/UserComp/UserComp.tsx":"26","/Users/nicoleremy/code/newsfeed/client/src/components/Scroll/Scroll.tsx":"27","/Users/nicoleremy/code/newsfeed/client/src/components/LoginForm/LoginForm.tsx":"28","/Users/nicoleremy/code/newsfeed/client/src/pages/Account/Account.tsx":"29"},{"size":362,"mtime":1609988527135,"results":"30","hashOfConfig":"31"},{"size":9170,"mtime":1610554216677,"results":"32","hashOfConfig":"31"},{"size":1614,"mtime":1610554216676,"results":"33","hashOfConfig":"31"},{"size":530,"mtime":1610255181000,"results":"34","hashOfConfig":"31"},{"size":6143,"mtime":1610554216679,"results":"35","hashOfConfig":"31"},{"size":1896,"mtime":1610554216684,"results":"36","hashOfConfig":"31"},{"size":5762,"mtime":1610554216681,"results":"37","hashOfConfig":"31"},{"size":1812,"mtime":1610554216678,"results":"38","hashOfConfig":"31"},{"size":1759,"mtime":1610554216682,"results":"39","hashOfConfig":"31"},{"size":217,"mtime":1610554216684,"results":"40","hashOfConfig":"31"},{"size":1521,"mtime":1610554216680,"results":"41","hashOfConfig":"31"},{"size":222,"mtime":1610554216683,"results":"42","hashOfConfig":"31"},{"size":3819,"mtime":1610648795780,"results":"43","hashOfConfig":"31"},{"size":4892,"mtime":1610554216681,"results":"44","hashOfConfig":"31"},{"size":530,"mtime":1610255181000,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1609988527135,"results":"47","hashOfConfig":"46"},{"size":2362,"mtime":1611458322737,"results":"48","hashOfConfig":"46"},{"size":2208,"mtime":1611456739068,"results":"49","hashOfConfig":"46"},{"size":1759,"mtime":1610554216682,"results":"50","hashOfConfig":"46"},{"size":1812,"mtime":1610554216678,"results":"51","hashOfConfig":"46"},{"size":217,"mtime":1610554216684,"results":"52","hashOfConfig":"46"},{"size":9934,"mtime":1610991079721,"results":"53","hashOfConfig":"46"},{"size":222,"mtime":1610554216683,"results":"54","hashOfConfig":"46"},{"size":8443,"mtime":1611458385674,"results":"55","hashOfConfig":"46"},{"size":5593,"mtime":1610982009055,"results":"56","hashOfConfig":"46"},{"size":4892,"mtime":1610554216681,"results":"57","hashOfConfig":"46"},{"size":1521,"mtime":1610554216680,"results":"58","hashOfConfig":"46"},{"size":3879,"mtime":1610650447508,"results":"59","hashOfConfig":"46"},{"size":6613,"mtime":1611458431745,"results":"60","hashOfConfig":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"2irr3u",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1jzc6t5",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nicoleremy/code/onramp_final/client/src/reportWebVitals.js",[],["126","127"],"/Users/nicoleremy/code/onramp_final/client/src/components/Appbar/Appbar.tsx",["128"],"import * as React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport {AppBar, Toolbar, IconButton, Typography, Badge, Tooltip, MenuItem, Menu }from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport API from '../../utils/API';\n\n\ninterface currentUserProps {\n  currentUser: boolean,\n  currentUserData: any\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appbar: {\n      backgroundColor: '#a5aaab'\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 10,\n      width: '50%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    appBarLinkWhite: {\n      textDecoration: \"none\",\n      color: \"white !important\"\n    },\n    appBarLinkBlack: {\n      textDecoration: \"none\",\n      color: \"black !important\"\n    }\n  }),\n);\n\nexport default function PrimarySearchAppBar({currentUser, currentUserData}: currentUserProps) {\n  console.log('appbar.tsx currentUser', currentUser)\n  console.log('Appbar.tsx currentUserData.username', currentUserData.username)\n  const history = useHistory();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  //TODO: move to app.tsx and pass down \n  //TODO: logout no longer refreshing the page since I changed getCurrentUser dependency to [] in the App.tsx file\n  const logOut = (e: React.FormEvent<SVGSVGElement>) : boolean => {\n    history.push('/');\n    API.logout()\n    .then(req =>{\n      history.push('/')\n    })\n    return true;\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge \n            badgeContent={4} \n            color=\"secondary\"\n            max={999}\n          >\n            <FavoriteIcon />\n          </Badge>\n        </IconButton>\n        <p>Favorites</p>\n      </MenuItem>\n      <MenuItem >\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <Tooltip title=\"New Account\" aria-label=\"New Account\">\n            <Link to=\"/user\" className={classes.appBarLinkBlack}>\n              <AccountCircle/>\n            </Link>\n          </Tooltip>\n        </IconButton>\n        <Link to=\"/user\" className={classes.appBarLinkBlack}>New Account</Link>\n      </MenuItem>\n      {currentUser? \n        <MenuItem>\n          <IconButton\n            aria-label=\"logout\"\n            aria-controls={menuId}\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n          >\n            <Tooltip title=\"Logout\" aria-label=\"Logout\">\n              <ExitToAppIcon onClick={logOut}/>\n            </Tooltip>\n          </IconButton>\n          <p>Logout</p>\n        </MenuItem> \n        : \n        <MenuItem>\n        <IconButton\n          aria-label=\"login\"\n          aria-controls={menuId}\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <Tooltip title=\"Login\" aria-label=\"Login\">\n            <Link to=\"/login\" className={classes.appBarLinkBlack}>\n              <VpnKeyIcon />\n            </Link>\n          </Tooltip>\n        </IconButton>\n        <p>Login</p>\n      </MenuItem>}\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar \n        position=\"fixed\"\n        className={classes.appbar}\n      >\n        <Toolbar>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                  <Link  to=\"/\" className={classes.appBarLinkWhite} ><HomeIcon/></Link>\n          </IconButton>\n          <Typography   \n            noWrap\n          >\n            <Link to=\"/\" className={classes.appBarLinkWhite}><h3>suP?</h3></Link>\n          </Typography>\n          {/* //TODO: Add in search bar to search by comment type */}\n          {/* <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"find...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div> */}\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n          {currentUser? \n            <Typography noWrap><p>welcome back...{currentUserData.username}!</p></Typography>\n            : \n            <Typography noWrap><p>...welcome to suP!</p></Typography>\n          }\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <FavoriteIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <Tooltip title=\"New Account\" aria-label=\"New Account\">\n                <Link to=\"/user\" className={classes.appBarLinkWhite}>\n                  <AccountCircle/>\n                </Link>\n              </Tooltip>\n            </IconButton>\n            {currentUser?   \n              <IconButton\n                edge=\"end\"\n                aria-label=\"logout\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n              >\n                <Tooltip title=\"Logout\" aria-label=\"Logout\">\n                  <ExitToAppIcon onClick={logOut}/>\n                </Tooltip> \n              </IconButton> \n              :\n              <IconButton\n                edge=\"end\"\n                aria-label=\"login\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n              >\n                <Tooltip title=\"Login\" aria-label=\"Login\">\n                  <Link to=\"/login\" className={classes.appBarLinkWhite}>\n                    <VpnKeyIcon />\n                  </Link>\n                </Tooltip>\n              </IconButton> \n            }\n          </div>\n          <div className={classes.sectionMobile}>\n            {currentUser? \n              <Typography noWrap><p >welcome back...{currentUserData.username}!</p></Typography>\n              : \n              <Typography noWrap><p>...welcome to suP!</p></Typography>}\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n",["129","130"],"/Users/nicoleremy/code/onramp_final/client/src/App.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/index.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/News/News.tsx",["131","132","133"],"import * as React from 'react';\nimport {useState, useEffect} from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {Container, Card, CardActions, IconButton, CardContent, Button, Typography, TextField, Backdrop} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport './news.css'\nimport API from '../../utils/API';\n\ninterface State {\n  message: string,\n  // id: string\n}\n\n\ninterface Props {\n  newsDB: any[],\n  currentUser: boolean\n}\n\ninterface ParamTypes {\n  id: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: 'auto'\n    },\n    cards: {\n      marginTop: '50px',\n      marginBottom: 'auto',\n      boxShadow: theme.shadows[5],\n    },\n    textField:{\n      width: '90%',\n      marginBottom: '20px'\n    },\n    cardAction: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    container: {\n      margin: \"5%\"\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: '#eee',\n      border: '2px solid #FFC0CB',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    button:{\n      marginBottom: '20px'\n    }\n  })\n);\n\nexport default function News({newsDB, currentUser}: Props) : JSX.Element {\n  // console.log('News.tsx newsDB[0]', newsDB[0])\n  const classes = useStyles();\n\n  const [commentObj, setCommentObj] = useState<State>({\n    message:\"\",\n    // id: newsDB\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const [reactionObj, setReactionObj] = useState<boolean>(false);\n\n  const [inputField, setInputField] = useState<boolean>(true);\n\n  const history = useHistory();\n\n  const {id} = useParams<ParamTypes>();\n  \n  // console.log('id', id)\n\n  const addCommBtn = `/comment/${id}`\n  // console.log('News.tsx id', id)\n\n  //TODO: work on function and api call for favoriting a sup feed \n  // const params = useParams<{params: string}>();\n  // console.log('params', params)\n  // function favoriteCom(e: React.ChangeEvent<HTMLFormElement>): boolean{\n  //   API.postReaction(reactionObj, newsDB._id)\n  //   return true;\n  // }\n\n  //TODO: work on api call to get newsid for particular sup feed for comments and reactions\n  // useEffect(()=>{\n  //   API.getNewsById(id)\n  //   .then(res=>{\n  //     console.log('News.tsx res.data', res.data)\n  //   })\n  // })\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function inputChange(e: React.ChangeEvent<HTMLTextAreaElement>){\n    //TODO: refactor any\n    const{name,value}: any = e.target;\n    setCommentObj({...commentObj, [name]: value})\n    //TODO: user protection around submitting an empty form \n    // if(!value){\n    //   setInputField(true)\n    // }\n  }\n  \n  function inputSubmit(e: React.ChangeEvent<HTMLFormElement>) : boolean {\n    e.preventDefault();\n    // console.log('News.tsx id', id)\n    //TODO: work on input api call for comments \n    // API.getNewsById(id)\n    // .then(res=>{\n    //   console.log('News.tsx res.data', res.data)\n    // })\n    API.postComment(commentObj, \"5ffdf55c81a5d9c8ca26c543\")\n    .then(comment =>{\n      // history.push(\"/\")\n      console.log('News.tsx comment', comment)\n    })\n    .catch(err =>console.log('err', err))\n    return true;\n  }\n\n  const newsArr = [];\n  for(let i = 0; i < newsDB.length; i ++){\n     newsArr.push(\n      <div className=\"news-bubble\">\n      <div className=\"news-arrow news-bottom left\"></div>\n        <Typography align=\"left\">\n            <h2 className=\"news\">...more talK!</h2>\n        </Typography>\n         <Card \n            className={classes.cards} \n            variant=\"outlined\" \n          >\n              <CardContent>\n              <Typography \n                variant=\"h5\" \n                component=\"h2\"\n              >\n                {newsDB[i].newsData}\n              </Typography>\n              <Typography \n                variant=\"body2\" \n                component=\"p\"\n              >\n                {newsDB[i].userId.username}\n              </Typography>\n              </CardContent>\n              <CardActions className={classes.cardAction}>\n                <IconButton aria-label=\"add to favorites\">\n                  <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                  <EmojiEmotionsIcon onClick={handleOpen} />\n                </IconButton>\n              </CardActions >\n              <div\n                className=\"News-cards-comment\"\n              >\n              {currentUser? <form\n                  noValidate \n                  autoComplete=\"on\" \n                  onSubmit={inputSubmit}\n                >\n                  <TextField\n                  id=\"filled-multiline-static\"\n                  label=\"comment\"\n                  multiline\n                  rows={2}\n                  variant=\"filled\"\n                  className={classes.textField}\n                  type=\"textarea\"\n                  name=\"message\"\n                  value={commentObj.message}\n                  onChange={inputChange}\n                  inputProps={{\n                    maxlength: 100\n                  }}\n                  helperText={`${commentObj.message.length}/100`}\n                />\n                <Button \n                  variant=\"contained\" \n                  color=\"primary\"  \n                  type=\"submit\" \n                  data-comm-news-id={id}\n                  className={classes.button}\n                >\n                  send\n                </Button>\n                {/* TODO: input user protection around submitting an empty form  */}\n                {/* {inputField===false? <Button \n                  variant=\"contained\" \n                  color=\"primary\"  \n                  type=\"submit\" \n                  data-comm-news-id={id}\n                  className={classes.button}\n                >\n                  send\n                </Button> : null} */}\n                \n                </form>: null}\n                \n               \n              </div> \n         </Card>\n      </div>\n     )\n  }\n  \n  return (\n    <div \n      className= {classes.root}\n    >\n        <Container>\n          <Grid container>\n            <Grid item xs={1} sm={1} md={3} lg={3}></Grid>\n            <Grid item xs={10} sm={10} md={6} lg={6}>\n            {newsArr.map(news =>{return news})}\n            </Grid>\n            <Grid item xs={1} sm={1} md={2} lg={2}></Grid>\n          </Grid>\n        </Container>\n      </div>\n  )\n}\n\n","/Users/nicoleremy/code/onramp_final/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Sup/Sup.tsx",["134","135"],"import * as React from 'react';\nimport {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {CircularProgress, TextField, Button, Grid, Container, Typography, CardContent, Card} from '@material-ui/core';\nimport API from '../../utils/API';\nimport './sup.css';\n\ninterface State {\n    newsData: string,\n    //TODO: add in newstype in form\n    // newsType: string,\n}\n\ninterface currentUserProps {\n    currentUser: boolean,\n    currentUserData: any\n}\n\ninterface LoginProps {\n    username: string,\n    password: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n        marginTop:'auto',\n    },\n    input: {\n        '& > *': {\n            background: 'white',\n        },\n        width: \"100%\",\n        marginRight: '100px'\n    },\n    formControl: {\n        minWidth: \"60%\",\n    },\n    send:{\n        marginTop: '50px',\n        marginRight: \"0px\"\n    },\n    welcome: {\n        fontSize: '30px !important',\n        textAlign: 'right'\n    },\n    moreTalk: {\n        fontSize: '30px !important',\n        textAlign: 'left'\n    },\n    cards: {\n        marginTop: '50px',\n        marginBottom: 'auto',\n        boxShadow: theme.shadows[5],\n    },\n    button:{\n        marginTop: '20px',\n        marginBottom: \"20px\"\n    }\n  }),\n);\n\n\nexport default function Sup({currentUser, currentUserData}: currentUserProps){\n    const classes = useStyles();\n\n    //initialize form object state\n    const [newsObj, setNewsObj] = useState<State>({\n        newsData:\"\",\n        //TODO: add in newstype in form\n        // newsType: string,\n    })\n\n    const [loginObj, setLoginObject] = useState<LoginProps>({\n        username:\"\",\n        password:\"\"\n    })\n\n    const history = useHistory();\n\n    //TODO: add in newstype to form\n    // const [state, setState] = React.useState<{ age: string | number; name: string }>({\n    //     age: '',\n    //     name: 'hai',\n    //   });\n    \n    //TODO: add in newstype to form\n    // const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    // const name = event.target.name as keyof typeof state;\n    // setState({\n    //     ...state,\n    //     [name]: event.target.value,\n    // });\n    // };\n\n    function loginInputChange (e: React.ChangeEvent<HTMLTextAreaElement>) {\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setLoginObject({ ...loginObj,[name]: value})\n    }\n\n    //TODO: move to app.tsx and pass down with props \n    function loginInputSubmit (e: React.FormEvent<HTMLFormElement>) : boolean { \n        // e.preventDefault();   \n        history.push(\"/\")     \n        API.login(loginObj)\n        .then(loginObj =>{\n            history.push(\"/\")\n            // console.log('loginObj', loginObj)\n        })\n        .catch(err =>console.log('err', err))\n        return true;\n    }\n    //TODO: move to app.tsx and pass down with props \n    //input change function\n    function inputChange (e: React.ChangeEvent<HTMLTextAreaElement>) {\n        //TODO: refactor any\n        const{ name, value}: any = e.target;\n        setNewsObj({ ...newsObj,[name]: value})\n        // setIcon(true)\n    }\n\n    //TODO: move to app.tsx and pass down with props \n    // input submit function\n    function inputSubmit (e: React.FormEvent<HTMLFormElement>) : boolean { \n        if(!newsObj){\n            alert('hey')\n        }\n        API.postNews(newsObj)\n        .then(news =>{\n            console.log('news', news)\n        })\n        .catch(err =>console.log('err', err))\n        setNewsObj({\n            newsData: \"\"\n            //TODO: add in newstype to form\n            // newsType: \"\"\n        })\n        return true;\n    }\n    return(\n        <div \n            className={classes.root}\n        >\n            <Container>\n            <Grid container >\n                <Grid item xs={1} sm={1} md={3} lg={3} direction=\"column\"></Grid>\n                <Grid item xs ={10} sm={10} md={6} lg={6}>\n                <div className=\"sup-bubble\">\n                    <div className=\"sup-arrow sup-bottom right\"></div>\n                        {currentUser? <Typography align=\"right\">\n                            <h2 className=\"sup\">tell me {currentUserData.username}...suP?</h2>\n                        </Typography> : null}\n                        \n                        {currentUser ? \n                            <Card \n                                className={classes.cards} \n                                variant=\"outlined\" \n                            >\n                            <CardContent>\n                            <form \n                                className={classes.root} \n                                noValidate \n                                autoComplete=\"on\" \n                                onSubmit={inputSubmit}\n                            >\n                                \n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"suP friend?\" \n                                    variant=\"outlined\" \n                                    multiline\n                                    rows={4}\n                                    type=\"textarea\"\n                                    name=\"newsData\"\n                                    value={newsObj.newsData}\n                                    onChange={inputChange}\n                                    className={classes.input}\n                                    inputProps={{\n                                        maxlength: 200\n                                    }}\n                                    helperText={`${newsObj.newsData.length}/200`}\n                                />\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                    send\n                                </Button>\n                                {/* TODO: add in newstype to form */}\n                                {/* <FormControl className={classes.formControl}>\n                                    <InputLabel htmlFor=\"age-native-simple\">Category</InputLabel>\n                                    <Select\n                                        native\n                                        value={newsObj.newsType}\n                                        name=\"newsType\"\n                                        onChange={handleChange}\n                                        inputProps={{\n                                            name: 'category',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option aria-label=\"None\" value=\"none\" />\n                                        <option value=\"Travel\">Travel</option>\n                                        <option value=\"Food\">Food</option>\n                                        <option value=\"Entertainment\">Entertainment</option>\n                                        <option value=\"Fashion\">Fashion</option>\n                                        <option value=\"Sports\">Sports</option>\n                                        <option value=\"Music\">Music</option>\n                                        <option value=\"Misc\">Misc</option>\n                                    </Select>\n                                </FormControl> */}\n       \n                            </form>\n                            </CardContent>\n                            </Card>\n                            : \n                            <Typography><h3 className={classes.welcome}>...Welcome to suP!</h3> <h4 className={classes.moreTalk}> where talk is encouraged...</h4>\n                            <form \n                                className={classes.root} \n                                noValidate \n                                autoComplete=\"on\" \n                                onSubmit={loginInputSubmit}\n                            >\n                                <Typography align=\"right\">\n                                    <h2 className=\"login\">...please login!</h2>\n                                </Typography>\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"username\" \n                                    variant=\"outlined\" \n                                    type=\"textarea\"\n                                    name=\"username\"\n                                    value={loginObj.username}\n                                    onChange={loginInputChange}\n                                    className={classes.input}\n                                />\n                                <TextField \n                                    id=\"outlined-basic\" \n                                    label=\"password\" \n                                    variant=\"outlined\" \n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={loginObj.password}\n                                    onChange={loginInputChange}\n                                    className={classes.input}\n                                />\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.button}>\n                                    login\n                                </Button>\n                                </form>\n                            </Typography>\n                        }\n                        </div>\n                    </Grid>                 \n                    <Grid item xs={1} sm={1} md={2} lg={2} direction=\"column\"></Grid>\n                </Grid>\n            </Container>\n        </div>\n    )\n}\n\n           \n                     ","/Users/nicoleremy/code/onramp_final/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/Home/Home.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/User/User.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/Scroll/Scroll.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/pages/Login/Login.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/LoginForm/LoginForm.tsx",[],"/Users/nicoleremy/code/onramp_final/client/src/components/UserComp/UserComp.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/index.tsx",[],["136","137"],"/Users/nicoleremy/code/newsfeed/client/src/reportWebVitals.js",[],["138","139"],"/Users/nicoleremy/code/newsfeed/client/src/App.tsx",["140"],"/Users/nicoleremy/code/newsfeed/client/src/utils/API.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/pages/Home/Home.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/components/Footer/Footer.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/pages/User/User.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/components/Appbar/Appbar.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/pages/Login/Login.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/components/News/News.tsx",["141","142"],"/Users/nicoleremy/code/newsfeed/client/src/components/Sup/Sup.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/components/UserComp/UserComp.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/components/Scroll/Scroll.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/components/LoginForm/LoginForm.tsx",[],"/Users/nicoleremy/code/newsfeed/client/src/pages/Account/Account.tsx",["143","144","145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":180,"column":40,"nodeType":"153","endLine":180,"endColumn":69},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"154","severity":1,"message":"155","line":4,"column":59,"nodeType":"156","messageId":"157","endLine":4,"endColumn":68},{"ruleId":"154","severity":1,"message":"158","line":77,"column":12,"nodeType":"156","messageId":"157","endLine":77,"endColumn":26},{"ruleId":"154","severity":1,"message":"159","line":84,"column":12,"nodeType":"156","messageId":"157","endLine":84,"endColumn":26},{"ruleId":"154","severity":1,"message":"160","line":83,"column":12,"nodeType":"156","messageId":"157","endLine":83,"endColumn":20},{"ruleId":"154","severity":1,"message":"161","line":83,"column":22,"nodeType":"156","messageId":"157","endLine":83,"endColumn":36},{"ruleId":"147","replacedBy":"162"},{"ruleId":"149","replacedBy":"163"},{"ruleId":"147","replacedBy":"162"},{"ruleId":"149","replacedBy":"163"},{"ruleId":"154","severity":1,"message":"164","line":24,"column":29,"nodeType":"156","messageId":"157","endLine":24,"endColumn":49},{"ruleId":"154","severity":1,"message":"165","line":107,"column":12,"nodeType":"156","messageId":"157","endLine":107,"endColumn":31},{"ruleId":"154","severity":1,"message":"166","line":127,"column":12,"nodeType":"156","messageId":"157","endLine":127,"endColumn":26},{"ruleId":"154","severity":1,"message":"167","line":3,"column":19,"nodeType":"156","messageId":"157","endLine":3,"endColumn":28},{"ruleId":"154","severity":1,"message":"168","line":5,"column":9,"nodeType":"156","messageId":"157","endLine":5,"endColumn":25},{"ruleId":"154","severity":1,"message":"169","line":78,"column":12,"nodeType":"156","messageId":"157","endLine":78,"endColumn":19},{"ruleId":"154","severity":1,"message":"170","line":78,"column":21,"nodeType":"156","messageId":"157","endLine":78,"endColumn":31},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"jsx-a11y/aria-props","aria-aria-label: This attribute is an invalid ARIA attribute.","JSXAttribute","@typescript-eslint/no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'inputChangeSup' is defined but never used.","'inputSubmitSup' is defined but never used.","'loginObj' is assigned a value but never used.","'setLoginObject' is assigned a value but never used.",["171"],["172"],"'setCurrentUserNewsDB' is assigned a value but never used.","'inputReactionChange' is defined but never used.","'favoriteSubmit' is defined but never used.","'useEffect' is defined but never used.","'CircularProgress' is defined but never used.","'userObj' is assigned a value but never used.","'setUserObj' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]